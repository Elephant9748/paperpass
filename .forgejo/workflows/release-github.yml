name: release-github

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  GITHUB_URL_REPO: https://github.com/Elephant9748/paperpass.git
  BIN_NAME: paperpass

jobs:
  build:
    runs-on: codeberg-small
    container: archlinux:latest

    steps:
      - name: Create resolv.conf
        run: |
          set -ex
          echo 'nameserver 1.1.1.1' >/etc/resolv.conf
          echo 'nameserver 1.1.0.0' >>/etc/resolv.conf

      - name: Install dependencies
        run: pacman --noconfirm -Syu && pacman --needed --noconfirm -S base-devel cmake ninja curl jq nodejs git github-cli

      - name: Checkout code
        uses: https://code.forgejo.org/actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup rust toolchain
        uses: https://code.forgejo.org/theoparis/rust-toolchain@stable

      - name: Forgejo Cli
        shell: bash
        run: |
          cargo install forgejo-cli
          fj version
          echo "------------------------"
          echo "Forgejo install success."

      - name: Rust version
        run: rustc --version

      - name: Get latest tag
        run: |
          set -x
          echo "TAG=$(git describe --abbrev=0)" >> $FORGEJO_ENV

      - name: Create Codeberg Release
        shell: bash
        run: |
          echo ${{ env.TAG }}
          fj auth add-key ${{ env.FORGEJO_REPOSITORY_OWNER }} ${{ env.FORGEJO_TOKEN }}
          fj release create --draft --prerelease --tag ${{ env.TAG }} ${{ env.BIN_NAME }}-${{ env.TAG }}
      
      - name: Upload Relase
        shell: bash
        run: |
          git remote add github ${{ env.GITHUB_URL_REPO }}
          echo $GITHUB_TOKEN
          unset GITHUB_TOKEN
          echo $GITHUB_TOKEN
          echo ${{ secrets.T_GITHUB }} > gh_token
          gh auth login --with-token < gh_token
          echo "Github Release File  "
          echo "---------------------"
          gh release view --json assets -q '[.assets.[].name]'
          echo "Get File Relase From Github"
          echo "---------------------------"
          gh release download --pattern '*.sha256'
          gh release download --pattern '*.gz'
          ls -la
          echo "Upload Attachment to Relase"
          echo "---------------------------"
          readarray -t asset_files < <(gh release view --json assets -q '[.assets.[].name]' | jq -r '.[]')
          echo $((${#asset_files[*]} - 1))
          for (( i=0; i<=$((${#asset_files[*]} - 1)); i++))
          do
            fj release asset create ${{ env.BIN_NAME }}-${{ env.TAG }} ${asset_files[$i]} ${asset_files[$i]}
          done


