name: release

on:
  workflow_dispatch:

jobs:
  build-release:
    strategy:
      matrix:
        info:
          - build: x86_64_gnu
            container: archlinux:latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            name: x86_64-linux
          - build: x86_64-musl
            container: archlinux:latest
            rust: stable
            target: x86_64-unknown-linux-musl
            name: x86_64-linux-musl

    runs-on: codeberg-tiny
    container: 
      image: ${{ matrix.info.container }}
    name: ${{ matrix.info.name }}

    steps:
      - name: Create resolv.conf
        run: |
          set -ex
          echo 'nameserver 1.1.1.1' >/etc/resolv.conf
          echo 'nameserver 1.1.0.0' >>/etc/resolv.conf

      - name: Install dependencies
        shell: bash
        run: | 
          pacman --noconfirm -Syu && pacman --needed --noconfirm -S base-devel cmake ninja curl jq nodejs git lsb-release

      - name: Checkout code
        uses: https://code.forgejo.org/actions/checkout@v5

      - name: Setup rust toolchain
        uses: https://code.forgejo.org/theoparis/rust-toolchain@master
        with:
          toolchain: ${{ matrix.info.rust }}
          targets: ${{ matrix.info.target }}

      - name: Rust version
        run: |
          rustc --version
          rustup toolchain list
          echo ${{ matrix.info.target }}

      - name: Build release
        run: |
          rustup target add ${{ matrix.info.target }}
          pwd
          cargo build --release --target ${{ matrix.info.target }}

      - name: Codeberg Cli
        shell: bash
        run: |
          cargo install codeberg-cli
          berg -h
          echo "Berg install success."

      - name: Packaging tar
        shell: bash
        run: |
          cp target/${{ matrix.info.target }}/release/paperpass .
          file paperpass
          echo ${{ env.FORGEJO_REPOSITORY }}
          echo ${{ env.FORGEJO_REPOSITORY_OWNER }}
          ls -la
          echo "create tar"
          echo "----------"
          tar -zcvf paperpass-${{ matrix.info.target }}.tar.gz paperpass
          ls -la

      - name: Create release
        shell: bash
        run: |
          berg --non-interactive auth login --token ${{ env.FORGEJO_TOKEN }}
          berg --output-mode json repo list | jq '.'
          berg release create --name "paperpass" -d "desc"
          # berg release create --repo ${{ env.FORGEJO_REPOSITORY }} --attachments paperpass-${{ matrix.info.target }}.tar.gz

